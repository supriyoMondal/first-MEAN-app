{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/home/home.component.ts","webpack:///src/app/components/home/home.component.html","webpack:///src/app/components/layout/dashboard/dashboard.component.ts","webpack:///src/app/components/layout/dashboard/dashboard.component.html","webpack:///src/app/components/layout/navbar/navbar.component.ts","webpack:///src/app/components/layout/navbar/navbar.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/profile/profile.component.ts","webpack:///src/app/components/profile/profile.component.html","webpack:///src/app/components/register/register.component.ts","webpack:///src/app/components/register/register.component.html","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/validate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","AppModule","declarations","providers","bootstrap","HomeComponent","DashboardComponent","authService","router","storeUserData","subscribe","user","console","log","isRegistered","err","navigate","styleUrls","NavbarComponent","flashMessage","login","register","home","token","localStorage","getItem","res","logout","show","cssClass","timeout","LoginComponent","validateService","email","undefined","length","password","validateEmail","timeOut","loginUser","setItem","message","error","errors","msg","onLoginSubmit","ProfileComponent","RegisterComponent","name","username","validateRegister","validatePassword","matchPassword","confirmPassword","registerUser","onRegisterSubmit","httpOptions","headers","AuthService","http","post","authToken","options","get","clear","providedIn","ValidateService","re","test","String","toLowerCase","environment","production","bootstrapModule","catch"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './components/home/home.component'\nimport { RegisterComponent } from './components/register/register.component'\nimport { LoginComponent } from './components/login/login.component'\nimport { ProfileComponent } from './components/profile/profile.component'\nimport { DashboardComponent } from './components/layout/dashboard/dashboard.component'\n\nconst routes: Routes = [\n  { path: \"\", component: HomeComponent },\n  { path: \"register\", component: RegisterComponent },\n  { path: \"login\", component: LoginComponent },\n  { path: \"profile\", component: ProfileComponent },\n  { path: \"dashboard\", component: DashboardComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'angular-src';\n}\n","<app-navbar></app-navbar>\n<div class=\"container\">\n  <flash-messages></flash-messages>\n  <router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/layout/navbar/navbar.component';\nimport { RegisterComponent } from './components/register/register.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { DashboardComponent } from './components/layout/dashboard/dashboard.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { FormsModule } from '@angular/forms';\nimport { ValidateService } from './services/validate.service'\nimport { FlashMessagesModule } from 'angular2-flash-messages'\nimport { HttpClientModule } from '@angular/common/http'\nimport { AuthService } from './services/auth.service'\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    RegisterComponent,\n    LoginComponent,\n    DashboardComponent,\n    HomeComponent,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    FlashMessagesModule.forRoot(),\n    HttpClientModule\n  ],\n  providers: [ValidateService, AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"jumbotron text-center\">\n    <h1>MEAN Authentication app</h1>\n    <p class=\"lead\">\n        Welcome to my application builded with the MERN stack\n    </p>\n    <div>\n        <a [routerLink]=\"['/register']\" class=\"btn btn-primary mr-2\">Register</a>\n        <a [routerLink]=\"['/login']\" class=\"btn btn-success ml-2\">Login</a>\n    </div>\n</div>\n<div class=\"row\">\n    <div class=\"col-sm-4\">\n        <h3>Express Backend</h3>\n        <p>A rock solid backend build with express/Node.js using Mongoose to organize to the models and queries</p>\n    </div>\n    <div class=\"col-sm-4\">\n        <h3>Angular CLI</h3>\n        <p>Angular is used on the front end of the application to generate the components</p>\n    </div>\n    <div class=\"col-sm-4\">\n        <h3>JWT Tokens</h3>\n        <p>FUll feature authentication using jsonwebtoken.</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../../services/auth.service'\nimport { Router } from \"@angular/router\"\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.storeUserData().subscribe(user => {\n      console.log(user);\n      this.authService.isRegistered = true;\n    },\n      err => {\n        this.router.navigate(['/login']);\n        return;\n      })\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router'\nimport { AuthService } from '../../../services/auth.service';\nimport { FlashMessagesService } from 'angular2-flash-messages'\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n  login: String = \"Login\"\n  register: String = \"Register\"\n  home: string = \"Home\"\n  token;\n  constructor(private router: Router,\n    private authService: AuthService,\n    private flashMessage: FlashMessagesService) { }\n\n  ngOnInit(): void {\n    this.token = localStorage.getItem('x-auth-token');\n\n  }\n  loggedIn() {\n    this.authService.storeUserData().subscribe(res => true, err => false)\n  }\n\n  onLogout() {\n    this.authService.logout();\n    this.flashMessage.show(\"You have been logged out.\", {\n      cssClass: \"alert-success\", timeout: 3000\n    });\n    this.router.navigate(['/']);\n    return;\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand text-success bold\" [routerLink]=\"['/']\">MEAN Auth app</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/']\">{{home}} </a>\n            </li>\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\">{{login}}</a>\n            </li>\n            <li [routerLinkActive]=\"['active']\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"nav-item\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\"> {{register}} </a>\n            </li>\n        </ul>\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router'\nimport { AuthService } from '../../services/auth.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n  constructor(private flashMessage: FlashMessagesService,\n    private authService: AuthService,\n    private validateService: ValidateService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.storeUserData().subscribe(\n      (res) => {\n        this.router.navigate(['/dashboard']);\n      }\n    )\n  }\n  onLoginSubmit() {\n    if (this.email == undefined || this.email.length == 0 || this.password == undefined || this.password.length == 0 ||\n      !this.validateService.validateEmail(this.email)) {\n      this.flashMessage.show(\"Please enter valid credentials.\", { cssClass: \"alert-danger\", timeOut: 4000 })\n      return;\n    }\n    const user = {\n      email: this.email,\n      password: this.password\n    }\n    this.authService.loginUser(user).subscribe((res) => {\n      this.flashMessage.show(\"You are registered successfully.\", { cssClass: \"alert-success\", timeout: 3000 });\n      localStorage.setItem('x-auth-token', res.token);\n    },\n      (err) => {\n        let message;\n        message = err.error.errors[0].msg;\n        this.flashMessage.show(message, { cssClass: \"alert-danger\", timeout: 4000 })\n        return;\n      },\n      () => {\n        this.router.navigate(['/dashboard']);\n        return;\n\n      })\n  }\n\n\n\n}\n","<h3 class=\"display-5 text-center\">\n    Login\n</h3>\n<form (ngSubmit)=\"onLoginSubmit()\">\n    <div class=\"form-group\">\n        <label>email</label>\n        <input class=\"form-control\" type=\"email\" [(ngModel)]=\"email\" name=\"email\">\n    </div>\n    <div class=\"form-group\">\n        <label>password</label>\n        <input class=\"form-control\" type=\"password\" [(ngModel)]=\"password\" name=\"password\">\n    </div>\n    <input type=\"submit\" value=\"Login\" class=\"btn btn-primary btn-block\">\n</form>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router'\nimport { AuthService } from '../../services/auth.service'\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnInit {\n  user: any;\n  constructor(private validateService: ValidateService, private flashMessage: FlashMessagesService, private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.storeUserData().subscribe(user => {\n      this.user = user;\n\n    }, err => {\n      this.router.navigate(['/']);\n    });\n  }\n\n}\n","<div *ngIf=\"user\">\n    <h2 class=\"display-4 text-center\">{{user.name}}</h2>\n    <ul class=\"list-group\">\n        <ul class=\"list-group-item\">\n            Username : {{user.username}}\n        </ul>\n        <ul class=\"list-group-item\">\n            email : {{user.email}}\n        </ul>\n\n    </ul>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ValidateService } from '../../services/validate.service';\nimport { FlashMessagesService } from 'angular2-flash-messages';\nimport { Router } from '@angular/router'\nimport { AuthService } from '../../services/auth.service'\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n  name: string;\n  email: string;\n  username: string;\n  password: string;\n  confirmPassword: string\n  constructor(private validateService: ValidateService, private flashMessage: FlashMessagesService, private authService: AuthService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.authService.storeUserData().subscribe(\n      (res) => {\n        this.router.navigate(['/dashboard']);\n      },\n      (err) => {\n        return;\n      }\n    )\n  }\n  onRegisterSubmit() {\n    const user = {\n      name: this.name,\n      email: this.email,\n      password: this.password,\n      username: this.username,\n    }\n    if (!this.validateService.validateRegister(user)) {\n      this.flashMessage.show(\"Enter all the fields\", { cssClass: 'alert-danger', timeout: 3000 });\n      return;\n    } else if (!this.validateService.validateEmail(user.email)) {\n      this.flashMessage.show(\"Enter a valid email\", { cssClass: 'alert-danger', timeout: 3000 });\n      return;\n    } else if (!this.validateService.validatePassword(user)) {\n      this.flashMessage.show(\"Enter a valid password\", { cssClass: 'alert-danger', timeout: 3000 });\n      return;\n\n    } else if (!this.validateService.matchPassword(user, this.confirmPassword)) {\n      this.flashMessage.show(\"Password don't match\", { cssClass: 'alert-danger', timeout: 3000 });\n      return;\n    }\n    //register user\n    this.authService.registerUser(user).subscribe((res) => {\n      this.flashMessage.show(\"You are registered successfully.\", { cssClass: \"alert-success\", timeout: 3000 });\n      localStorage.setItem('x-auth-token', res.token);\n    },\n      (err) => {\n        let message;\n        message = err.error.errors[0].msg;\n        this.flashMessage.show(message, { cssClass: \"alert-danger\", timeout: 4000 })\n        return;\n      },\n      () => {\n        this.router.navigate(['/dashboard']);\n        return;\n      })\n  }\n\n}\n","<h2 class=\"display-4 text-center text-primary\">Register</h2>\n<form (ngSubmit)=\"onRegisterSubmit()\">\n    <div class=\"form-group\">\n        <label> Name </label>\n        <input [(ngModel)]=\"name\" [required]=\"true\" name=\"name\" type=\"text\" class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label> Email </label>\n        <input [(ngModel)]=\"email\" name=\"email\" type=\"email\" class=\"form-control\">\n    </div>\n\n    <div class=\"form-group\">\n        <label> username </label>\n        <input [(ngModel)]=\"username\" name=\"username\" type=\"text\" class=\"form-control\" required>\n    </div>\n    <div class=\"form-group\">\n        <label> Password </label>\n        <input [(ngModel)]=\"password\" name=\"password\" type=\"password\" required class=\"form-control\">\n    </div>\n    <div class=\"form-group\">\n        <label> confirm-password </label>\n        <input [(ngModel)]=\"confirmPassword\" type=\"password\" required name=\"confirmPassword\" class=\"form-control\">\n    </div>\n    <input type=\"submit\" value=\"Register\" class=\"btn btn-primary btn-block\">\n</form>","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs'\nlet httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\"\n  })\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  authToken: any;\n  user: any;\n  isRegistered: boolean;\n  constructor(private http: HttpClient) { }\n  registerUser(user): Observable<any> {\n    return this.http.post<any>(\"http://localhost:5000/users/register\", user, httpOptions);\n  }\n  loginUser(user): Observable<any> {\n    return this.http.post<any>(\"http://localhost:5000/users/login\", user, httpOptions);\n  }\n  storeUserData(): Observable<any> {\n    this.authToken = localStorage.getItem('x-auth-token');\n    let options = {\n      headers: new HttpHeaders({\n        \"x-auth-token\": this.authToken,\n        \"Content-type\": 'application/json'\n      })\n    }\n    return this.http.get<any>('http://localhost:5000/users/auth', options);\n  }\n  logout() {\n    localStorage.clear();\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ValidateService {\n\n  constructor() { }\n  validateRegister(user) {\n    if (user.name == undefined || user.name.length == 0 ||\n      user.username == undefined || user.username.length == 0 ||\n      user.password == undefined || user.password.length == 0 ||\n      user.email == undefined || user.email.length == 0\n    ) {\n      return false;\n    }\n    return true;\n  }\n  validateEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n  validatePassword(user) {\n    if (user.password == undefined || user.password.length < 6) {\n      return false;\n    }\n    return true;\n  }\n  matchPassword(user, password) {\n    if (user.password == undefined || password == undefined || user.password != password) {\n      return false;\n    }\n    return true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}